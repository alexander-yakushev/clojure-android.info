#+title: Home
#+OPTIONS: toc:nil

#+begin_hiccup
[:div {:class "container"}
 [:div {:class "jumbotron"}
  [:img {:src "images/ca_large.png" :style "float: left; margin-right: 30px;"}]
  [:div {:class "row"}
   [:h1 "Android ♥ Clojure"]
   [:p "Simplicity and brevity of <b>Clojure</b> combined with
     <b>Android platform</b> ubiquity and robustness gives you a
     powerful dynamic environment to develop your mobile
     applications."]
   [:a {:class "btn btn-lg btn-primary" :role "button"
        :href "#get-started" }
    "Get started"]]]
 [:center {:id "newsline"}
  (let [f (->> (io/list-files :posts)
               (filter #(= (:post-type (first (io/read-doc %))) "news"))
               last)
        [metadata] (io/read-doc f)]
    [:span "Latest news: " (format-date (:date metadata) "(dd/MM/YY) ")
     [:a {:href (post-url f)} (:title metadata)]])]]
#+end_hiccup

* Rationale{{[:sup " " [:a {:style "font-size: 14px;" :href "#"} "↑"]]}}
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: container
  :CUSTOM_ID: why
  :END:

  [[http://clojure.org][Clojure]] is a mature programming language that compiles to JVM
  bytecode. This fact makes it possible to package AOT-compiled Clojure
  code into Android applications. But what are the compelling features
  Clojure can offer compared to Java when it comes to mobile
  development?

  - *Modern functional language.* Clojure has everything to be considered "hip"
    by today's standards. It offers first-class functions, convenient syntax for
    different data structures, focus on immutable data, powerful multi-threading
    facilities. Being a Lisp dialect, Clojure harnesses a state-of-the-art macro
    system that allows you to build your own expressive language abstractions.

  - *REPL-driven development.* Say no to vicious rebuild-reload cycle! Clojure's
    dynamic compilation enables the possibility to modify the application
    directly in runtime. You don't need to recompile your app with every
    slightest change anymore, but rather write code against a running app and
    observe it's behavior immediately. This boosts productivity greatly, helping
    you to write new features, debug problems, quickly try code snippets and
    much more. Take this REPL and may it serve you well.

  - *Logic, UI, data - all in one language.* Make no mistake --- Android's
    declarative UI is a step forward from conventional Swing approach. Java is
    not the language where declarative style fits nicely, and XML perfectly
    handles tree-like UI structures. But having separate languages in one single
    application creates certain inconveniences. Clojure brings user interface
    back to the host language. Declare your UI with Clojure native data
    structures, manipulate them with regular functions, and finally transform
    them into UI objects. No XML involved!

  - *All strength of Android is still there.* Due to Clojure's excellent Java
    interop capabilities you can use everything Android platform has to offer.
    If some feature is not yet ported to idiomatic Clojure, you can always
    fallback to creating objects and calling methods. In fact, Clojure-Android
    doesn't try to wrap every single Java method to make it feel more Clojurish
    --- Android platform is beautifully designed and we try to extend it only
    where it benefits to do so.

** Shortcomings

   Everything comes with a price. Clojure-Android has a couple of
   drawbacks and peculiarities you should consider before jumping into
   development.

   - *It is a hobby project.* The work for Clojure-Android initiative is done
     mostly for fun/interest, and our community is small (but this directly
     depends on you!). Please, expect not every feature to be present, and those
     that are to have bugs. It is hard to keep up with Android platform
     evolution and to track down all problems that may arise, but we are doing
     our best.

   - *Clojure runtime is big.* This is the main technical challenge so far,
     which leads to two issues --- it takes some time for simple application to
     load (6-8 seconds, depending on the device); and also the memory
     consumption is higher than with Java, so the application might killed more
     often (when it is not active) to free the memory. Although steps are taken
     to solve this problem, for example, by [[http://clojure-android.info/blog/2015/01/05/experimental-skummet-support-was/][reducing Clojure runtime]] we were
     able to reduce loading time to 2 seconds.

   - *Clojure is somewhat slower than Java.* Clojure code can be optimized to
     achieve the performance on par with Java, but nevertheless most idiomatic
     Clojure will be slower for natural reasons. Clojure promotes immutable
     collections and use of ephemeral objects, and until ART, Dalvik did not
     handle lots of small objects well (things are better know). This puts some
     additional pressure on the Garbage Collector. On the bright side, you can
     retreat to writing performance-critical code directly in Java alongside
     with Clojure code.

   - *You have to know Android.* More like a warning than a drawback, you still
     have to know Android platform decently to use Clojure-Android. We do not
     try to compete with AOSP and replace its idioms with our own ones, but
     rather embrace them completely and simplify the usage wherever there is
     benefit to do so. If you are new to Android development, it is strongly
     advised to learn the concepts from conventional Java side first.
     Clojure-Android tools and documentation presume that developer is familiar
     with Android, as the basics are outside the scope of it.

   - *You have to know Clojure.* If you overlooked Clojure before because you
     didn't see where to apply it, but now are interested in Clojure-Android ---
     this is great, yet we recommend you to get acquainted with Clojure for JVM
     first. Learning Clojure with Clojure-Android might be a frustrating
     experience because of the platform limitations and the quite different
     approach to programming on this platform.

* Get started{{[:sup " " [:a {:style "font-size: 14px;" :href "#"} "↑"]]}}
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: container
  :CUSTOM_ID: get-started
  :END:

   [[https://github.com/clojure-android/lein-droid/wiki/Tutorial][Lein-droid tutorial]] will help you install all the required tools
   and get you familiarized with Clojure/Android build process.

   [[https://github.com/alexander-yakushev/events/blob/master/tutorial.md][Android App Development with Clojure]] is a very comprehensive
   step-by-step guide to writing a simple, yet functional Clojure
   mobile application.

* Tools{{[:sup " " [:a {:style "font-size: 14px;" :href "#"} "↑"]]}}
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: container
  :CUSTOM_ID: tools
  :END:

  This list contains developer tools that support Clojure-Android
  initiative or are somehow related to it.

  #+ATTR_HTML: :options class="table table-stripped table-tools" frame="none" border="0"
  |                        | Project    | Version | Docs            | Description                                                                                                    |
  |------------------------+------------+---------+-----------------+----------------------------------------------------------------------------------------------------------------|
  | [[./images/leiningen.jpg]] | [[https://github.com/clojure-android/lein-droid][lein-droid]] |   0.3.0 | [[https://github.com/clojure-android/lein-droid/wiki][Wiki]] [[http://clojure-android.github.io/lein-droid][Marginalia]] | [[http://leiningen.org][Leiningen]] plugin, a build tool for Clojure-Android projects.                                                   |
  | [[./images/neko.png]]      | [[http://github.com/clojure-android/neko][Neko]]       |   3.1.0 | [[https://github.com/clojure-android/neko/wiki][Wiki]] [[http://clojure-android.github.io/neko][Marginalia]] | Toolkit library for idiomatic Clojure development on Android.                                                  |
  | [[./images/cider.png]]     | [[https://github.com/clojure-emacs/cider][CIDER]]      |   0.8.1 |                 | Clojure IDE and REPL for Emacs.                                                                                |
  | [[./images/emacs.png]]     | [[https://github.com/clojure-emacs/ac-cider][ac-cider]]   |   0.2.0 |                 | Auto-complete source for CIDER completion.                                                                     |
  | [[./images/nightcode.png]] | [[https://nightcode.info/][Nightcode]]  |   0.4.2 |                 | A simple IDE for Clojure and Java projects targeting the command line, the desktop, the web, Android, and iOS. |

* Applications{{[:sup " "[:a {:style "font-size: 14px;" :href "#"} "↑"]]}}
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: container
  :CUSTOM_ID: apps
  :END:

  The following list consists of mobile applications that are powered
  by Clojure-Android tools.

  #+ATTR_HTML: :options class="table table-stripped table-apps" frame="none" border="0"
  |                         | Project        | Author        | Description                                                                                                                                                                                                              |
  |-------------------------+----------------+---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
  | [[./images/nightweb.png]]   | [[https://nightweb.net][Nightweb]]       | [[https://github.com/oakes][Zach Oakes]]    | Nightweb connects your Android device to an anonymous, peer-to-peer social network. You can write posts and share photos, and your followers will retrieve them using BitTorrent running over the I2P anonymous network. |
  | [[./images/spaz.png]]       | [[https://github.com/kenrestivo/spazradioapp][SPAZ Radio App]] | [[https://github.com/kenrestivo][Ken Restivo]]   | A radio listening app for the [[http://spaz.org/][SPAZ streaming radio station]].                                                                                                                                                              |
  | [[./images/figurehead.png]] | [[https://play.google.com/store/apps/details?id%3Dfigurehead.ui][Figurehead]]     | [[https://github.com/pw4ever][Wei Peng]]      | Rule your Android, as the Root, fully programmable, in Clojure.                                                                                                                                                          |
  | [[./images/4clojure.png]]   | [[https://play.google.com/store/apps/details?id%3Dorg.bytopia.foreclojure][4Clojure]]       | Alex Yakushev | Solve short Clojure challenges on your mobile phone.                                                                                                                                                                     |

* Community{{[:sup " " [:a {:style "font-size: 14px;" :href "#"} "↑"]]}}
  :PROPERTIES:
  :HTML_CONTAINER_CLASS: container
  :CUSTOM_ID: community
  :END:

  Right now the main communication channel is the [[https://groups.google.com/forum/#!forum/clojure-android][mailing list]]. It is
  not highly populated, but you will most likely get an answer from
  one of the developers.

  You can also join *#clojure-android* channel on Freenode.net IRC server and
  catch someone there.

  If you experience troubles with some of the tools, please open an
  issue in the respective tool's Github repository.
